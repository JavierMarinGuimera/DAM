package pojos;
// Generated 21 feb. 2022 17:59:07 by Hibernate Tools 5.6.3.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Empleats generated by hbm2java
 */
public class Empleats implements java.io.Serializable {

	private short empNo;
	private Departaments departaments;
	private String cognoms;
	private String nom;
	private Date dataAlta;
	private Float sou;
	private Float comissio;

	public Empleats() {
	}

	public Empleats(short empNo, Departaments departaments, String cognoms, String nom) {
		this.empNo = empNo;
		this.departaments = departaments;
		this.cognoms = cognoms;
		this.nom = nom;
	}

	public Empleats(short empNo, Departaments departaments, String cognoms, String nom, Date dataAlta, Float sou,
			Float comissio) {
		this.empNo = empNo;
		this.departaments = departaments;
		this.cognoms = cognoms;
		this.nom = nom;
		this.dataAlta = dataAlta;
		this.sou = sou;
		this.comissio = comissio;
	}

	public short getEmpNo() {
		return this.empNo;
	}

	public void setEmpNo(short empNo) {
		this.empNo = empNo;
	}

	public Departaments getDepartaments() {
		return this.departaments;
	}

	public void setDepartaments(Departaments departaments) {
		this.departaments = departaments;
	}

	public String getCognoms() {
		return this.cognoms;
	}

	public void setCognoms(String cognoms) {
		this.cognoms = cognoms;
	}

	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	public Date getDataAlta() {
		return this.dataAlta;
	}

	public void setDataAlta(Date dataAlta) {
		this.dataAlta = dataAlta;
	}

	public Float getSou() {
		return this.sou;
	}

	public void setSou(Float sou) {
		this.sou = sou;
	}

	public Float getComissio() {
		return this.comissio;
	}

	public void setComissio(Float comissio) {
		this.comissio = comissio;
	}

	@Override
	public String toString() {
		return "{" +
				" empNo='" + getEmpNo() + "'" +
				", cognoms='" + getCognoms() + "'" +
				", nom='" + getNom() + "'" +
				", dataAlta='" + getDataAlta() + "'" +
				", sou='" + getSou() + "'" +
				", comissio='" + getComissio() + "'" +
				"}";
	}

	/**
	 * ANSWER METHODS. Receives a boolean with the answer of the query. True if
	 * worked, false if doesnt.
	 * 
	 * @param boolean
	 */
	public static void isCreated(Boolean created) {
		System.out.println("Empleado " + (created ? "" : "no ") + "creado.\n");
	}

	public static void isUpdated(Boolean updated) {
		System.out.println("Empleado " + (updated ? "" : "no ") + "actualizado.\n");
	}

	public static void isDeleted(Boolean deleted) {
		System.out.println("Empleado " + (deleted ? "" : "no ") + "eliminado.\n");
	}

	public static void isInDepartamento(Boolean isDepartamentUpdated) {
		System.out.println("Departamento " + (isDepartamentUpdated ? "" : "no ") + "actualizado en el empleado.\n");
	}

	/**
	 * Receives a list to print it.
	 * 
	 * @param empleados
	 */
	public static void printEmpleadosFromList(List<Empleats> empleados) {
		for (Empleats empleado : empleados) {
			System.out.println(empleado);
		}
	}

	/**
	 * Encapsulates the parameter in a list of them to reuse the method above.
	 * 
	 * @param empleado
	 */
	public static void printDepartamento(Empleats empleado) {
		List<Empleats> empleadoAsList = new ArrayList<>();
		empleadoAsList.add(empleado);
		printEmpleadosFromList(empleadoAsList);
	}
}
