package pojos;
// Generated 21 feb. 2022 17:59:07 by Hibernate Tools 5.6.3.Final

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Departaments generated by hbm2java
 */
public class Departaments implements java.io.Serializable {

	private byte deptNo;
	private String deptNom;
	private String deptCiutat;
	private Set<Empleats> empleatses = new HashSet<>(0);

	public Departaments() {
	}

	public Departaments(byte deptNo) {
		this.deptNo = deptNo;
	}

	public Departaments(byte deptNo, String deptNom, String deptCiutat) {
		this.deptNo = deptNo;
		this.deptNom = deptNom;
		this.deptCiutat = deptCiutat;
	}

	public Departaments(byte deptNo, String deptNom, String deptCiutat, Set<Empleats> empleatses) {
		this.deptNo = deptNo;
		this.deptNom = deptNom;
		this.deptCiutat = deptCiutat;
		this.empleatses = empleatses;
	}

	public byte getDeptNo() {
		return this.deptNo;
	}

	public void setDeptNo(byte deptNo) {
		this.deptNo = deptNo;
	}

	public String getDeptNom() {
		return this.deptNom;
	}

	public void setDeptNom(String deptNom) {
		this.deptNom = deptNom;
	}

	public String getDeptCiutat() {
		return this.deptCiutat;
	}

	public void setDeptCiutat(String deptCiutat) {
		this.deptCiutat = deptCiutat;
	}

	public Set<Empleats> getEmpleatses() {
		return this.empleatses;
	}

	public void setEmpleatses(Set<Empleats> empleatses) {
		this.empleatses = empleatses;
	}

	@Override
	public String toString() {
		return (this != null ? "{" +
				" deptNo='" + getDeptNo() + "'" +
				", deptNom='" + getDeptNom() + "'" +
				", deptCiutat='" + getDeptCiutat() + "'" +
				"}" : "Departamento no encontrado");
	}

	/**
	 * ANSWER METHODS. Receives a boolean with the answer of the query. True if
	 * worked, false if doesnt.
	 * 
	 * @param boolean
	 */
	public static void isCreated(Boolean created) {
		System.out.println("Departamento " + (created ? "" : "no ") + "creado.\n");
	}

	public static void isUpdated(Boolean updated) {
		System.out.println("Departamento " + (updated ? "" : "no ") + "actualizado.\n");
	}

	public static void isDeleted(Boolean deleted) {
		System.out.println("Departamento " + (deleted ? "" : "no ") + "eliminado.\n");
	}

	/**
	 * Receives a list of user to print them.
	 * 
	 * @param users
	 */
	public static void printDepartamentosFromList(List<Departaments> departamentos) {
		for (Departaments departamento : departamentos) {
			System.out.println(departamento);
			for (Empleats empleado : departamento.getEmpleatses()) {
				System.out.println("\t" + empleado);
			}
		}
	}

	/**
	 * Encapsulates de user in a list of them to reuse the method above.
	 * 
	 * @param user
	 */
	public static void printDepartamento(Departaments departamento) {
		List<Departaments> departamentoAsList = new ArrayList<>();
		departamentoAsList.add(departamento);
		printDepartamentosFromList(departamentoAsList);
	}
}
